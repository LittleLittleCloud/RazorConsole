@using RazorConsole.Components
@using Spectre.Console

<TextInput Label="Your Name:"
           Value="@_value"
           ValueChanged="OnValueChangedAsync"
           Placeholder="Type your name..."
           BorderColor="@Color.Grey37"
           BorderPadding="@BorderPadding"
           FocusedBorderColor="@Color.Yellow"
           PlaceholderColor="@Color.Grey"
           ValueColor="@Color.White"
           Expand="true"
           OnSubmit="OnSubmitAsync" />

<Padder Padding="@InstructionPadding">
    <Markup Content="@_helperText" Foreground="@Color.Grey70" Decoration="@Decoration.Dim" />
</Padder>

@if (_submittedName is not null)
{
    <Padder Padding="@ButtonRowPadding">
        <Columns>
            <Markup Content="@_submittedName" Decoration="@Decoration.Bold" />
            <Padder Padding="@ButtonPadding">
                <TextButton OnClick="ClearName" Content="Clear" BackgroundColor="@Color.Grey" />
            </Padder>
        </Columns>
    </Padder>
}

@code {
    private static readonly Padding InstructionPadding = new Padding(0, 1, 0, 0);
    private static readonly Padding ButtonRowPadding = new Padding(0, 1, 0, 0);
    private static readonly Padding ButtonPadding = new Padding(1, 0, 0, 0);
    private static readonly Padding BorderPadding = new Padding(1, 0, 1, 0);
    private string? _value;
    private string? _submittedName;
    private string _helperText = "Start typing your name and press Enter to confirm.";

    private Task OnValueChangedAsync(string? value)
    {
        _value = string.IsNullOrEmpty(value) ? null : value;
        _helperText = _value is null
            ? "Start typing your name and press Enter to confirm."
            : "Press Enter to confirm or Tab to move on.";
        StateHasChanged();
        return Task.CompletedTask;
    }

    private Task OnSubmitAsync(string? value)
    {
        _submittedName = string.IsNullOrWhiteSpace(value)
            ? null
            : $"Nice to meet you, {value}!";

        _helperText = _submittedName ?? "Name cleared. Type again to set a value.";

        StateHasChanged();
        return Task.CompletedTask;
    }

    private void ClearName()
    {
        _value = null;
        _submittedName = null;
        _helperText = "Start typing your name and press Enter to confirm.";
        StateHasChanged();
    }
}
